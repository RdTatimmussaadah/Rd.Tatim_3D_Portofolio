/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Minh Nguyen (https://sketchfab.com/Minh_Nguyen_2004)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/retro-tvs-3-variations-2k-b608feee069e46d3a0dd2fe171f9f9ca
Title: Retro TVs (3 Variations) (2K)
*/

import { useGLTF, useTexture } from '@react-three/drei'
import gsap from 'gsap';
import { useEffect, useRef } from 'react';

const Computer = ({currentProject}) => {
  const { nodes, materials } = useGLTF('/models/retro_tvs_3_variations_2k.glb')

  const computerRef = useRef();
  useEffect(() => {
    if (computerRef.current) {
      gsap.to(computerRef.current.position, {
        x: currentProject.position[0],
        y: currentProject.position[1],
        z: currentProject.position[2],
        duration: 1.2,
        ease: "power3.out",
      });

      gsap.to(computerRef.current.rotation, {
        x: currentProject.rotation[0],
        y: currentProject.rotation[1],
        z: currentProject.rotation[2],
        duration: 1.2,
        ease: "power3.out",
      });
    }
  }, [currentProject.position, currentProject.rotation]);


  const screen1 = useTexture('/textures/project/project1.png');
  const screen2 = useTexture('/textures/project/project2.png');
  const screen3 = useTexture('/textures/project/project3.png');
  const screen4 = useTexture('/textures/project/project4.png');
  const screen5 = useTexture('/textures/project/project5.png');

  return (
    <group ref={computerRef} position={currentProject.position} rotation={currentProject.rotation} dispose={null}>
      <group scale={0.02}>
        <group position={[-1.48, 0, 6.677]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.main_tv_body_low_Main_TV_Mat_0.geometry}
            material={materials.Main_TV_Mat}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.main_tv_body_low_Main_TV_Glass_Mat_0.geometry}
            material={materials.Main_TV_Glass_Mat}>
                <meshBasicMaterial map={screen1}/>
            </mesh>
        </group>
        <group position={[80.912, -0.579, -23.776]} rotation={[-Math.PI / 2, 0, 0.604]} scale={100}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.sec_tv_main_low_Main_TV_Mat_0.geometry}
            material={materials.Main_TV_Mat}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.sec_tv_main_low_Main_TV_Glass_Mat_0.geometry}
            material={materials.Main_TV_Glass_Mat}>
                <meshBasicMaterial map={screen2}/>
            </mesh>
        </group>
        <group
          position={[9.135, 65.594, 2.742]}
          rotation={[-Math.PI / 2, 0, -0.487]}
          scale={66.098}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.sec_tv_main_low005_Main_TV_Mat_0.geometry}
            material={materials.Main_TV_Mat}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.sec_tv_main_low005_Main_TV_Glass_Mat_0.geometry}
            material={materials.Main_TV_Glass_Mat}>
                <meshBasicMaterial map={screen3}/>
            </mesh>
        </group>
        <group position={[67.86, 65.471, -12.8]} rotation={[-Math.PI / 2, 0, 0.263]} scale={100}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.tetri_tv_main_low_Main_TV_Mat_0.geometry}
            material={materials.Main_TV_Mat}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.tetri_tv_main_low_Main_TV_Glass_Mat_0.geometry}
            material={materials.Main_TV_Glass_Mat}>
                <meshBasicMaterial map={screen4}/>
            </mesh>
        </group>
        <group position={[63.218, 0, 33.949]} rotation={[-Math.PI / 2, 0, -0.05]} scale={76.858}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.tetri_tv_main_low006_Main_TV_Mat_0.geometry}
            material={materials.Main_TV_Mat}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.tetri_tv_main_low006_Main_TV_Glass_Mat_0.geometry}
            material={materials.Main_TV_Glass_Mat}>
                <meshBasicMaterial map={screen5}/>
            </mesh>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/retro_tvs_3_variations_2k.glb')
export default Computer;